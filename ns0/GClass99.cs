// Decompiled with JetBrains decompiler
// Type: ns0.GClass99
// Assembly: WiiU_USB_Helper, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8A8903FC-BD1C-4FCE-9A9B-6F50F8E0D0D6
// Assembly location: C:\0.6.1.655\WiiU_USB_Helper-cleaned.exe

using System;
using System.IO;
using System.Security.Cryptography;

namespace ns0
{
  public sealed class GClass99 : IDisposable
  {
    private static readonly byte[] byte_0 = new byte[172]{ (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 172, (byte) 0, (byte) 0, (byte) 0, (byte) 20, (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 40, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 };
    private static readonly byte[] byte_1 = new byte[848]{ (byte) 0, (byte) 1, (byte) 0, (byte) 4, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 209, (byte) 94, (byte) 165, (byte) 237, (byte) 21, (byte) 171, (byte) 225, (byte) 26, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 82, (byte) 111, (byte) 111, (byte) 116, (byte) 45, (byte) 67, (byte) 65, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 51, (byte) 45, (byte) 88, (byte) 83, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 99, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 1, (byte) 0, (byte) 0, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 172, (byte) 0, (byte) 0, (byte) 0, (byte) 20, (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 40, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 };
    private static readonly byte[] byte_2 = new byte[2640]{ (byte) 0, (byte) 1, (byte) 0, (byte) 4, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 209, (byte) 94, (byte) 165, (byte) 224, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 82, (byte) 111, (byte) 111, (byte) 116, (byte) 45, (byte) 67, (byte) 65, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 51, (byte) 45, (byte) 88, (byte) 83, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 99, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 254, (byte) 237, (byte) 250, (byte) 206, (byte) 1, (byte) 0, (byte) 0, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 204, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 170, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 172, (byte) 0, (byte) 0, (byte) 0, (byte) 20, (byte) 0, (byte) 1, (byte) 0, (byte) 20, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 40, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 0, (byte) 0, (byte) 132, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 4, (byte) 145, (byte) 158, (byte) 190, (byte) 70, (byte) 74, (byte) 208, (byte) 245, (byte) 82, (byte) 205, (byte) 27, (byte) 114, (byte) 231, (byte) 136, (byte) 73, (byte) 16, (byte) 207, (byte) 85, (byte) 169, (byte) 240, (byte) 46, (byte) 80, (byte) 120, (byte) 150, (byte) 65, (byte) 216, (byte) 150, (byte) 104, (byte) 61, (byte) 192, (byte) 5, (byte) 189, (byte) 10, (byte) 234, (byte) 135, (byte) 7, (byte) 157, (byte) 138, (byte) 194, (byte) 132, (byte) 198, (byte) 117, (byte) 6, (byte) 95, (byte) 116, (byte) 200, (byte) 191, (byte) 55, (byte) 200, (byte) 128, (byte) 68, (byte) 64, (byte) 149, (byte) 2, (byte) 160, (byte) 34, (byte) 152, (byte) 11, (byte) 184, (byte) 173, (byte) 72, (byte) 56, (byte) 63, (byte) 109, (byte) 40, (byte) 167, (byte) 157, (byte) 227, (byte) 150, (byte) 38, (byte) 204, (byte) 178, (byte) 178, (byte) 42, (byte) 15, (byte) 25, (byte) 228, (byte) 16, (byte) 50, (byte) 240, (byte) 148, (byte) 179, (byte) 159, (byte) 240, (byte) 19, (byte) 49, (byte) 70, (byte) 222, (byte) 200, (byte) 246, (byte) 193, (byte) 169, (byte) 213, (byte) 92, (byte) 210, (byte) 141, (byte) 158, (byte) 28, (byte) 71, (byte) 179, (byte) 209, (byte) 31, (byte) 79, (byte) 84, (byte) 38, (byte) 194, (byte) 199, (byte) 128, (byte) 19, (byte) 90, (byte) 39, (byte) 117, (byte) 211, (byte) 202, (byte) 103, (byte) 155, (byte) 199, (byte) 232, (byte) 52, (byte) 240, (byte) 224, (byte) 251, (byte) 88, (byte) 230, (byte) 136, (byte) 96, (byte) 167, (byte) 19, (byte) 48, (byte) 252, (byte) 149, (byte) 121, (byte) 23, (byte) 147, (byte) 200, (byte) 251, (byte) 169, (byte) 53, (byte) 167, (byte) 166, (byte) 144, (byte) 143, (byte) 34, (byte) 157, (byte) 238, (byte) 42, (byte) 12, (byte) 166, (byte) 185, (byte) 178, (byte) 59, (byte) 18, (byte) 212, (byte) 149, (byte) 166, (byte) 254, (byte) 25, (byte) 208, (byte) 215, (byte) 38, (byte) 72, (byte) 33, (byte) 104, (byte) 120, (byte) 96, (byte) 90, (byte) 102, (byte) 83, (byte) 141, (byte) 191, (byte) 55, (byte) 104, (byte) 153, (byte) 144, (byte) 93, (byte) 52, (byte) 69, (byte) 252, (byte) 92, (byte) 114, (byte) 122, (byte) 14, (byte) 19, (byte) 224, (byte) 226, (byte) 200, (byte) 151, (byte) 28, (byte) 156, (byte) 250, (byte) 108, (byte) 96, (byte) 103, (byte) 136, (byte) 117, (byte) 115, (byte) 42, (byte) 78, (byte) 117, (byte) 82, (byte) 61, (byte) 47, (byte) 86, (byte) 47, (byte) 18, (byte) 170, (byte) 189, (byte) 21, (byte) 115, (byte) 191, (byte) 6, (byte) 201, (byte) 64, (byte) 84, (byte) 174, (byte) 250, (byte) 129, (byte) 167, (byte) 20, (byte) 23, (byte) 175, (byte) 154, (byte) 74, (byte) 6, (byte) 109, (byte) 15, (byte) 252, (byte) 90, (byte) 214, (byte) 75, (byte) 171, (byte) 40, (byte) 177, byte.MaxValue, (byte) 96, (byte) 102, (byte) 31, (byte) 68, (byte) 55, (byte) 212, (byte) 158, (byte) 30, (byte) 13, (byte) 148, (byte) 18, (byte) 235, (byte) 75, (byte) 202, (byte) 207, (byte) 76, (byte) 253, (byte) 106, (byte) 52, (byte) 8, (byte) 132, (byte) 121, (byte) 130, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 82, (byte) 111, (byte) 111, (byte) 116, (byte) 45, (byte) 67, (byte) 65, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 88, (byte) 83, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 99, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) 122, (byte) 8, (byte) 148, (byte) 173, (byte) 80, (byte) 91, (byte) 182, (byte) 198, (byte) 126, (byte) 46, (byte) 91, (byte) 221, (byte) 106, (byte) 59, (byte) 236, (byte) 67, (byte) 217, (byte) 16, (byte) 199, (byte) 114, (byte) 233, (byte) 204, (byte) 41, (byte) 13, (byte) 165, (byte) 133, (byte) 136, (byte) 183, (byte) 125, (byte) 204, (byte) 17, (byte) 104, (byte) 11, (byte) 179, (byte) 226, (byte) 159, (byte) 78, (byte) 171, (byte) 187, (byte) 38, (byte) 233, (byte) 140, (byte) 38, (byte) 1, (byte) 152, (byte) 92, (byte) 4, (byte) 27, (byte) 177, (byte) 67, (byte) 120, (byte) 230, (byte) 137, (byte) 24, (byte) 26, (byte) 173, (byte) 119, (byte) 5, (byte) 104, (byte) 233, (byte) 40, (byte) 162, (byte) 185, (byte) 129, (byte) 103, (byte) 238, (byte) 62, (byte) 16, (byte) 208, (byte) 114, (byte) 190, (byte) 239, (byte) 31, (byte) 162, (byte) 47, (byte) 162, (byte) 170, (byte) 62, (byte) 19, (byte) 241, (byte) 30, (byte) 24, (byte) 54, (byte) 169, (byte) 42, (byte) 66, (byte) 129, (byte) 239, (byte) 112, (byte) 170, (byte) 244, (byte) 228, (byte) 98, (byte) 153, (byte) 130, (byte) 33, (byte) 198, (byte) 251, (byte) 185, (byte) 189, (byte) 208, (byte) 23, (byte) 230, (byte) 172, (byte) 89, (byte) 4, (byte) 148, (byte) 233, (byte) 206, (byte) 169, (byte) 133, (byte) 156, (byte) 235, (byte) 45, (byte) 42, (byte) 76, (byte) 23, (byte) 102, (byte) 242, (byte) 195, (byte) 57, (byte) 18, (byte) 197, (byte) 143, (byte) 20, (byte) 168, (byte) 3, (byte) 227, (byte) 111, (byte) 204, (byte) 220, (byte) 204, (byte) 220, (byte) 19, (byte) 253, (byte) 122, (byte) 231, (byte) 124, (byte) 122, (byte) 120, (byte) 217, (byte) 151, (byte) 230, (byte) 172, (byte) 195, (byte) 85, (byte) 87, (byte) 224, (byte) 211, (byte) 233, (byte) 235, (byte) 100, (byte) 180, (byte) 60, (byte) 146, (byte) 244, (byte) 197, (byte) 13, (byte) 103, (byte) 166, (byte) 2, (byte) 222, (byte) 179, (byte) 145, (byte) 176, (byte) 102, (byte) 97, (byte) 205, (byte) 50, (byte) 136, (byte) 11, (byte) 214, (byte) 73, (byte) 18, (byte) 175, (byte) 28, (byte) 188, (byte) 183, (byte) 22, (byte) 42, (byte) 6, (byte) 240, (byte) 37, (byte) 101, (byte) 211, (byte) 176, (byte) 236, (byte) 228, (byte) 252, (byte) 236, (byte) 221, (byte) 174, (byte) 138, (byte) 73, (byte) 52, (byte) 219, (byte) 142, (byte) 230, (byte) 127, (byte) 48, (byte) 23, (byte) 152, (byte) 98, (byte) 33, (byte) 21, (byte) 93, (byte) 19, (byte) 28, (byte) 108, (byte) 63, (byte) 9, (byte) 171, (byte) 25, (byte) 69, (byte) 194, (byte) 6, (byte) 172, (byte) 112, (byte) 201, (byte) 66, (byte) 179, (byte) 111, (byte) 73, (byte) 161, (byte) 24, (byte) 59, (byte) 205, (byte) 120, (byte) 182, (byte) 228, (byte) 180, (byte) 124, (byte) 108, (byte) 92, (byte) 172, (byte) 15, (byte) 141, (byte) 98, (byte) 248, (byte) 151, (byte) 198, (byte) 149, (byte) 61, (byte) 209, (byte) 47, (byte) 40, (byte) 183, (byte) 12, (byte) 91, (byte) 125, (byte) 247, (byte) 81, (byte) 129, (byte) 154, (byte) 152, (byte) 52, (byte) 101, (byte) 38, (byte) 37, (byte) 0, (byte) 1, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 3, (byte) 112, (byte) 65, (byte) 56, (byte) 239, (byte) 187, (byte) 189, (byte) 161, (byte) 106, (byte) 152, (byte) 125, (byte) 217, (byte) 1, (byte) 50, (byte) 109, (byte) 28, (byte) 148, (byte) 89, (byte) 72, (byte) 76, (byte) 136, (byte) 162, (byte) 134, (byte) 27, (byte) 145, (byte) 163, (byte) 18, (byte) 88, (byte) 122, (byte) 231, (byte) 14, (byte) 246, (byte) 35, (byte) 126, (byte) 197, (byte) 14, (byte) 16, (byte) 50, (byte) 220, (byte) 57, (byte) 221, (byte) 232, (byte) 154, (byte) 150, (byte) 168, (byte) 232, (byte) 89, (byte) 215, (byte) 106, (byte) 152, (byte) 166, (byte) 231, (byte) 227, (byte) 106, (byte) 12, (byte) 254, (byte) 53, (byte) 44, (byte) 168, (byte) 147, (byte) 5, (byte) 130, (byte) 52, byte.MaxValue, (byte) 131, (byte) 63, (byte) 203, (byte) 59, (byte) 3, (byte) 129, (byte) 30, (byte) 159, (byte) 13, (byte) 192, (byte) 217, (byte) 165, (byte) 47, (byte) 128, (byte) 69, (byte) 180, (byte) 178, (byte) 249, (byte) 65, (byte) 27, (byte) 103, (byte) 165, (byte) 28, (byte) 68, (byte) 181, (byte) 239, (byte) 140, (byte) 231, (byte) 123, (byte) 214, (byte) 213, (byte) 107, (byte) 167, (byte) 87, (byte) 52, (byte) 161, (byte) 133, (byte) 109, (byte) 230, (byte) 212, (byte) 190, (byte) 214, (byte) 211, (byte) 162, (byte) 66, (byte) 199, (byte) 200, (byte) 121, (byte) 27, (byte) 52, (byte) 34, (byte) 55, (byte) 94, (byte) 92, (byte) 119, (byte) 154, (byte) 191, (byte) 7, (byte) 47, (byte) 118, (byte) 149, (byte) 239, (byte) 160, (byte) 247, (byte) 91, (byte) 203, (byte) 131, (byte) 120, (byte) 159, (byte) 195, (byte) 14, (byte) 63, (byte) 228, (byte) 204, (byte) 131, (byte) 146, (byte) 32, (byte) 120, (byte) 64, (byte) 99, (byte) 137, (byte) 73, (byte) 199, (byte) 246, (byte) 136, (byte) 86, (byte) 95, (byte) 100, (byte) 155, (byte) 116, (byte) 214, (byte) 61, (byte) 141, (byte) 88, byte.MaxValue, (byte) 173, (byte) 218, (byte) 87, (byte) 30, (byte) 149, (byte) 84, (byte) 66, (byte) 107, (byte) 19, (byte) 24, (byte) 252, (byte) 70, (byte) 137, (byte) 131, (byte) 212, (byte) 200, (byte) 165, (byte) 98, (byte) 139, (byte) 6, (byte) 182, (byte) 252, (byte) 93, (byte) 80, (byte) 124, (byte) 19, (byte) 231, (byte) 161, (byte) 138, (byte) 193, (byte) 81, (byte) 30, (byte) 182, (byte) 214, (byte) 46, (byte) 165, (byte) 68, (byte) 143, (byte) 131, (byte) 80, (byte) 20, (byte) 71, (byte) 169, (byte) 175, (byte) 179, (byte) 236, (byte) 194, (byte) 144, (byte) 60, (byte) 157, (byte) 213, (byte) 47, (byte) 146, (byte) 42, (byte) 201, (byte) 172, (byte) 219, (byte) 239, (byte) 88, (byte) 198, (byte) 2, (byte) 24, (byte) 72, (byte) 217, (byte) 110, (byte) 32, (byte) 135, (byte) 50, (byte) 211, (byte) 209, (byte) 217, (byte) 217, (byte) 234, (byte) 68, (byte) 13, (byte) 145, (byte) 98, (byte) 28, (byte) 122, (byte) 153, (byte) 219, (byte) 136, (byte) 67, (byte) 197, (byte) 156, (byte) 31, (byte) 46, (byte) 44, (byte) 125, (byte) 155, (byte) 87, (byte) 125, (byte) 81, (byte) 44, (byte) 22, (byte) 109, (byte) 111, (byte) 126, (byte) 26, (byte) 173, (byte) 74, (byte) 119, (byte) 74, (byte) 55, (byte) 68, (byte) 126, (byte) 120, (byte) 254, (byte) 32, (byte) 33, (byte) 225, (byte) 74, (byte) 149, (byte) 209, (byte) 18, (byte) 160, (byte) 104, (byte) 173, (byte) 160, (byte) 25, (byte) 244, (byte) 99, (byte) 199, (byte) 165, (byte) 86, (byte) 133, (byte) 170, (byte) 187, (byte) 104, (byte) 136, (byte) 185, (byte) 36, (byte) 100, (byte) 131, (byte) 209, (byte) 139, (byte) 156, (byte) 128, (byte) 111, (byte) 71, (byte) 73, (byte) 24, (byte) 51, (byte) 23, (byte) 130, (byte) 52, (byte) 74, (byte) 75, (byte) 133, (byte) 49, (byte) 51, (byte) 75, (byte) 38, (byte) 48, (byte) 50, (byte) 99, (byte) 217, (byte) 210, (byte) 235, (byte) 79, (byte) 75, (byte) 185, (byte) 150, (byte) 2, (byte) 179, (byte) 82, (byte) 246, (byte) 174, (byte) 64, (byte) 70, (byte) 198, (byte) 154, (byte) 94, (byte) 126, (byte) 142, (byte) 74, (byte) 24, (byte) 239, (byte) 155, (byte) 192, (byte) 162, (byte) 222, (byte) 214, (byte) 19, (byte) 16, (byte) 65, (byte) 112, (byte) 18, (byte) 253, (byte) 130, (byte) 76, (byte) 193, (byte) 22, (byte) 207, (byte) 183, (byte) 196, (byte) 193, (byte) 247, (byte) 236, (byte) 113, (byte) 119, (byte) 161, (byte) 116, (byte) 70, (byte) 203, (byte) 222, (byte) 150, (byte) 243, (byte) 237, (byte) 216, (byte) 143, (byte) 205, (byte) 5, (byte) 47, (byte) 11, (byte) 136, (byte) 138, (byte) 69, (byte) 253, (byte) 175, (byte) 43, (byte) 99, (byte) 19, (byte) 84, (byte) 244, (byte) 13, (byte) 22, (byte) 229, (byte) 250, (byte) 156, (byte) 44, (byte) 78, (byte) 218, (byte) 152, (byte) 231, (byte) 152, (byte) 209, (byte) 94, (byte) 96, (byte) 70, (byte) 220, (byte) 83, (byte) 99, (byte) 243, (byte) 9, (byte) 107, (byte) 44, (byte) 96, (byte) 122, (byte) 157, (byte) 141, (byte) 213, (byte) 91, (byte) 21, (byte) 2, (byte) 166, (byte) 172, (byte) 125, (byte) 60, (byte) 200, (byte) 216, (byte) 197, (byte) 117, (byte) 153, (byte) 142, (byte) 125, (byte) 121, (byte) 105, (byte) 16, (byte) 200, (byte) 4, (byte) 196, (byte) 149, (byte) 35, (byte) 80, (byte) 87, (byte) 233, (byte) 30, (byte) 205, (byte) 38, (byte) 55, (byte) 201, (byte) 193, (byte) 132, (byte) 81, (byte) 81, (byte) 172, (byte) 107, (byte) 154, (byte) 4, (byte) 144, (byte) 174, (byte) 62, (byte) 198, (byte) 244, (byte) 119, (byte) 64, (byte) 160, (byte) 219, (byte) 11, (byte) 163, (byte) 109, (byte) 7, (byte) 89, (byte) 86, (byte) 206, (byte) 231, (byte) 53, (byte) 78, (byte) 163, (byte) 233, (byte) 164, (byte) 242, (byte) 114, (byte) 11, (byte) 38, (byte) 85, (byte) 12, (byte) 125, (byte) 57, (byte) 67, (byte) 36, (byte) 188, (byte) 12, (byte) 183, (byte) 233, (byte) 49, (byte) 125, (byte) 138, (byte) 134, (byte) 97, (byte) 244, (byte) 33, (byte) 145, byte.MaxValue, (byte) 16, (byte) 176, (byte) 130, (byte) 86, (byte) 206, (byte) 63, (byte) 210, (byte) 91, (byte) 116, (byte) 94, (byte) 81, (byte) 148, (byte) 144, (byte) 107, (byte) 77, (byte) 97, (byte) 203, (byte) 76, (byte) 46, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 82, (byte) 111, (byte) 111, (byte) 116, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 67, (byte) 65, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 123, (byte) 232, (byte) 239, (byte) 108, (byte) 178, (byte) 121, (byte) 201, (byte) 226, (byte) 238, (byte) 225, (byte) 33, (byte) 198, (byte) 234, (byte) 244, (byte) 79, (byte) 246, (byte) 57, (byte) 248, (byte) 143, (byte) 7, (byte) 139, (byte) 75, (byte) 119, (byte) 237, (byte) 159, (byte) 149, (byte) 96, (byte) 176, (byte) 53, (byte) 130, (byte) 129, (byte) 181, (byte) 14, (byte) 85, (byte) 171, (byte) 114, (byte) 17, (byte) 21, (byte) 161, (byte) 119, (byte) 112, (byte) 60, (byte) 122, (byte) 48, (byte) 254, (byte) 58, (byte) 233, (byte) 239, (byte) 28, (byte) 96, (byte) 188, (byte) 29, (byte) 151, (byte) 70, (byte) 118, (byte) 178, (byte) 58, (byte) 104, (byte) 204, (byte) 4, (byte) 177, (byte) 152, (byte) 82, (byte) 91, (byte) 201, (byte) 104, (byte) 241, (byte) 29, (byte) 226, (byte) 219, (byte) 80, (byte) 228, (byte) 217, (byte) 231, (byte) 240, (byte) 113, (byte) 229, (byte) 98, (byte) 218, (byte) 226, (byte) 9, (byte) 34, (byte) 51, (byte) 233, (byte) 211, (byte) 99, (byte) 246, (byte) 29, (byte) 215, (byte) 193, (byte) 159, (byte) 243, (byte) 164, (byte) 169, (byte) 30, (byte) 143, (byte) 101, (byte) 83, (byte) 212, (byte) 113, (byte) 221, (byte) 123, (byte) 132, (byte) 185, (byte) 241, (byte) 184, (byte) 206, (byte) 115, (byte) 53, (byte) 240, (byte) 245, (byte) 84, (byte) 5, (byte) 99, (byte) 161, (byte) 234, (byte) 184, (byte) 57, (byte) 99, (byte) 224, (byte) 155, (byte) 233, (byte) 1, (byte) 1, (byte) 31, (byte) 153, (byte) 84, (byte) 99, (byte) 97, (byte) 40, (byte) 112, (byte) 32, (byte) 233, (byte) 204, (byte) 13, (byte) 171, (byte) 72, (byte) 127, (byte) 20, (byte) 13, (byte) 102, (byte) 38, (byte) 161, (byte) 131, (byte) 109, (byte) 39, (byte) 17, (byte) 31, (byte) 32, (byte) 104, (byte) 222, (byte) 71, (byte) 114, (byte) 20, (byte) 145, (byte) 81, (byte) 207, (byte) 105, (byte) 198, (byte) 27, (byte) 166, (byte) 14, (byte) 249, (byte) 217, (byte) 73, (byte) 160, (byte) 247, (byte) 31, (byte) 84, (byte) 153, (byte) 242, (byte) 211, (byte) 154, (byte) 210, (byte) 140, (byte) 112, (byte) 5, (byte) 52, (byte) 130, (byte) 147, (byte) 196, (byte) 49, byte.MaxValue, (byte) 189, (byte) 51, (byte) 246, (byte) 188, (byte) 166, (byte) 13, (byte) 199, (byte) 25, (byte) 94, (byte) 162, (byte) 188, (byte) 197, (byte) 109, (byte) 32, (byte) 11, (byte) 175, (byte) 109, (byte) 6, (byte) 208, (byte) 156, (byte) 65, (byte) 219, (byte) 141, (byte) 233, (byte) 199, (byte) 32, (byte) 21, (byte) 76, (byte) 164, (byte) 131, (byte) 43, (byte) 105, (byte) 192, (byte) 140, (byte) 105, (byte) 205, (byte) 59, (byte) 7, (byte) 58, (byte) 0, (byte) 99, (byte) 96, (byte) 47, (byte) 70, (byte) 45, (byte) 51, (byte) 128, (byte) 97, (byte) 165, (byte) 234, (byte) 108, (byte) 145, (byte) 92, (byte) 213, (byte) 98, (byte) 53, (byte) 121, (byte) 195, (byte) 235, (byte) 100, (byte) 206, (byte) 68, (byte) 239, (byte) 88, (byte) 109, (byte) 20, (byte) 186, (byte) 170, (byte) 136, (byte) 52, (byte) 1, (byte) 155, (byte) 62, (byte) 235, (byte) 238, (byte) 211, (byte) 121, (byte) 0, (byte) 1, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 };
    private static readonly byte[] byte_3 = new byte[676]{ (byte) 0, (byte) 1, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 82, (byte) 111, (byte) 111, (byte) 116, (byte) 45, (byte) 67, (byte) 65, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 49, (byte) 45, (byte) 88, (byte) 83, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 48, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 84, (byte) 104, (byte) 101, (byte) 77, (byte) 111, (byte) 115, (byte) 116, (byte) 65, (byte) 119, (byte) 101, (byte) 115, (byte) 111, (byte) 109, (byte) 101, (byte) 115, (byte) 116, (byte) 0, (byte) 0, (byte) 35, (byte) 219, (byte) 68, (byte) 36, (byte) 208, (byte) 51, (byte) 236, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 1, (byte) 79, (byte) 72, (byte) 66, (byte) 67, byte.MaxValue, byte.MaxValue, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 26, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, byte.MaxValue, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 };
    private byte[] byte_5 = new byte[16];
    private byte[] byte_6 = new byte[16];
    private byte[] byte_7 = new byte[64];
    private byte[] byte_8 = new byte[0];
    private byte[] byte_10 = new byte[60];
    private byte[] byte_12 = new byte[88];
    private byte[] byte_13 = new byte[256];
    private uint uint_2 = 65537;
    private byte[] byte_14 = new byte[63];
    private ushort ushort_2 = ushort.MaxValue;
    private byte[] byte_16 = new byte[48];
    private byte[] byte_17 = new byte[32];
    private byte byte_4;
    private uint uint_0;
    private uint uint_1;
    private byte byte_9;
    private byte byte_11;
    private ushort ushort_1;
    private bool bool_1;
    private uint uint_3;
    private ulong ulong_1;
    private byte byte_15;
    private ulong ulong_2;
    private bool bool_2;

    public ushort NumOfDlc { get; set; }

    public ulong TicketId { get; set; }

    public byte[] Byte_0
    {
      get
      {
        return this.byte_5;
      }
      set
      {
        this.byte_5 = value;
        this.TitleKeyChanged = true;
        this.bool_1 = false;
      }
    }

    public bool TitleKeyChanged { get; private set; }

    public static byte[] smethod_0(string string_0, string string_1, int int_0)
    {
      return GClass99.smethod_3(string_0, string_1, int_0, GClass99.byte_2, false, false);
    }

    public static byte[] smethod_1(string string_0, string string_1, int int_0)
    {
      return GClass99.smethod_3(string_0, string_1, int_0, GClass99.byte_3, false, false);
    }

    public static byte[] smethod_2(string string_0, string string_1, int int_0, bool bool_3 = false, bool bool_4 = false)
    {
      return GClass99.smethod_3(string_0, string_1, int_0, GClass99.byte_1, bool_3, bool_4);
    }

    private static byte[] smethod_3(string string_0, string string_1, int int_0, byte[] byte_18, bool bool_3 = false, bool bool_4 = false)
    {
      byte[] byte_18_1 = (byte[]) byte_18.Clone();
      byte[] numArray1 = new byte[2]{ (byte) (int_0 >> 8), (byte) int_0 };
      byte[] numArray2 = string_0.smethod_6();
      byte[] numArray3 = string_1.smethod_6();
      Buffer.BlockCopy((Array) numArray1, 0, (Array) byte_18_1, 486, 2);
      Buffer.BlockCopy((Array) numArray2, 0, (Array) byte_18_1, 476, numArray2.Length);
      Buffer.BlockCopy((Array) numArray3, 0, (Array) byte_18_1, 447, numArray3.Length);
      if (bool_3)
        GClass99.smethod_4(ref byte_18_1);
      if (bool_4)
        GClass99.smethod_5(ref byte_18_1);
      return byte_18_1;
    }

    private static void smethod_4(ref byte[] byte_18)
    {
      for (int index = 0; index < 64; ++index)
        byte_18[228 + index] = (byte) 0;
    }

    private static void smethod_5(ref byte[] byte_18)
    {
      Buffer.BlockCopy((Array) GClass99.byte_0, 0, (Array) byte_18, 676, GClass99.byte_0.Length);
    }

    public void Dispose()
    {
      this.method_0(true);
      GC.SuppressFinalize((object) this);
    }

    ~GClass99()
    {
      this.method_0(false);
    }

    private void method_0(bool bool_3)
    {
      if (bool_3 && !this.bool_2)
      {
        this.byte_5 = (byte[]) null;
        this.byte_8 = (byte[]) null;
        this.byte_13 = (byte[]) null;
        this.byte_10 = (byte[]) null;
        this.byte_7 = (byte[]) null;
        this.byte_14 = (byte[]) null;
        this.byte_6 = (byte[]) null;
        this.byte_16 = (byte[]) null;
        this.byte_17 = (byte[]) null;
        this.byte_12 = (byte[]) null;
      }
      this.bool_2 = true;
    }

    public static GClass99 smethod_6(string string_0, SystemType genum3_0)
    {
      return GClass99.smethod_7(File.ReadAllBytes(string_0), genum3_0);
    }

    public static GClass99 smethod_7(byte[] byte_18, SystemType genum3_0)
    {
      GClass99 gclass99 = new GClass99();
      MemoryStream memoryStream = new MemoryStream(byte_18);
      try
      {
        gclass99.method_2((Stream) memoryStream, genum3_0);
      }
      catch
      {
        memoryStream.Dispose();
        throw;
      }
      memoryStream.Dispose();
      return gclass99;
    }

    private void method_1(SystemType genum3_0)
    {
      byte[] numArray = GClass98.smethod_0(genum3_0);
      byte[] bytes = BitConverter.GetBytes(GClass27.smethod_6(this.ulong_1));
      Array.Resize<byte>(ref bytes, 16);
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      rijndaelManaged.Mode = CipherMode.CBC;
      rijndaelManaged.Padding = PaddingMode.None;
      rijndaelManaged.KeySize = 128;
      rijndaelManaged.BlockSize = 128;
      rijndaelManaged.Key = numArray;
      rijndaelManaged.IV = bytes;
      ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor();
      MemoryStream memoryStream = new MemoryStream(this.byte_6);
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, decryptor, CryptoStreamMode.Read);
      cryptoStream.Read(this.byte_5, 0, this.byte_5.Length);
      cryptoStream.Dispose();
      memoryStream.Dispose();
      decryptor.Dispose();
      rijndaelManaged.Clear();
    }

    private void method_2(Stream stream_0, SystemType genum3_0)
    {
      stream_0.Seek(0L, SeekOrigin.Begin);
      byte[] buffer = new byte[8];
      stream_0.Read(buffer, 0, 4);
      this.uint_2 = GClass27.smethod_5(BitConverter.ToUInt32(buffer, 0));
      stream_0.Read(this.byte_13, 0, this.byte_13.Length);
      stream_0.Read(this.byte_10, 0, this.byte_10.Length);
      stream_0.Read(this.byte_7, 0, this.byte_7.Length);
      stream_0.Read(this.byte_14, 0, this.byte_14.Length);
      stream_0.Read(this.byte_6, 0, this.byte_6.Length);
      this.byte_15 = (byte) stream_0.ReadByte();
      stream_0.Read(buffer, 0, 8);
      this.TicketId = GClass27.smethod_6(BitConverter.ToUInt64(buffer, 0));
      stream_0.Read(buffer, 0, 4);
      this.uint_0 = GClass27.smethod_5(BitConverter.ToUInt32(buffer, 0));
      stream_0.Read(buffer, 0, 8);
      this.ulong_1 = GClass27.smethod_6(BitConverter.ToUInt64(buffer, 0));
      stream_0.Read(buffer, 0, 4);
      this.ushort_2 = GClass27.smethod_4(BitConverter.ToUInt16(buffer, 0));
      this.NumOfDlc = GClass27.smethod_4(BitConverter.ToUInt16(buffer, 2));
      stream_0.Read(buffer, 0, 8);
      this.ulong_2 = GClass27.smethod_6(BitConverter.ToUInt64(buffer, 0));
      this.byte_11 = (byte) stream_0.ReadByte();
      this.byte_4 = (byte) stream_0.ReadByte();
      this.byte_9 = this.byte_4;
      stream_0.Read(this.byte_16, 0, this.byte_16.Length);
      stream_0.Read(this.byte_17, 0, this.byte_17.Length);
      stream_0.Read(buffer, 0, 2);
      this.ushort_1 = GClass27.smethod_4(BitConverter.ToUInt16(buffer, 0));
      stream_0.Read(buffer, 0, 8);
      this.uint_1 = GClass27.smethod_5(BitConverter.ToUInt32(buffer, 0));
      this.uint_3 = GClass27.smethod_5(BitConverter.ToUInt32(buffer, 4));
      stream_0.Read(this.byte_12, 0, this.byte_12.Length);
      this.method_1(genum3_0);
    }

    private void method_3(SystemType genum3_0)
    {
      this.byte_6 = this.byte_8;
      this.method_1(genum3_0);
    }
  }
}
